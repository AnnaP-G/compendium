// *        1-4. Змінні (створення, перевизначення,)
// *        5. typeof оператор 
// *        6. alert метод 
// *        7. confirm()
// *        8. prompt()
// *        9. Числа
// *        9. parseInt метод
// *        9. parseFloat метод 
// *        9. toFixed() метод
// *        10. Приведення до числа
// *        11. Math метод 
// *        12. Математичні операції
// *        13. Рандомні числа, округлення
// *        14. Рядки, довжина, конкатенація, шаблонні
// *        14. toLowerCase(), toUpperCase()
// *        14. includes()
// *        15. &&, ||, !==, > < Логічні оператори порівнянн 



// *** 1. Створення змінної:
// const x = 10;
// let y = 20;
// console.log(x);
// console.log(y);

// x // імя змінної;
// 10 // значення змінної;

// const // це закрита коробка;
// let // це відкрита коробка;


// ===============================================

// *** 2. Перевизначення змінної:
// let y = 10;
// y = 30;
// console.log(y);
// 30 // нове значення змінної


// ===============================================

// *** 3. Змінна без ініціалізації.
// - let x; // це js створив порожню коробку, в console.log(x) виведе undefined;
//    - const x; // це js створив порожню коробку, в console.log(x) виведе помилку,
//   бо в закриту коробку треба класти значення при створенні;


// ===============================================

// *** 4. Унікальність ідентифікатора (змінної):
// не можна створити дві коробки з однаковим імям.x


// ===============================================

// *** 5. Оператор typeof:
// const y = 10;
// console.log(typeof y); // виведе number;
// console.log(typeof 'Hello'); // виведе string;
// Щоб зберегти результат треба створити змінну, куди його зберігати
// let myBox = typeof true;
// console.log(myBox); // boolean;


// ===============================================

// *** 6. Метод alert:
// - працює, як console.log(), але виводить дані на сторінку, а не в консоль.
// alert('Hello') // виведе повідомлення Hello:


// ===============================================

// *** 7. confirm() // це, щоб запитати щось в юзера, питання має бути таким, щоб відповідь була true || false.
// - в дужках передаємо якийсь рядок
// confirm('Are you ok?') - цей запис повертає результат від юзера, який можна зберегти в змінну:
// let isOk = confirm('Are you ok?');
// console.log(isOk) // виведе true || false, залежно від того, що натисне юзер:


// ================================================

// *** 8. prompt() // це щоб запитати щось в юзера. Введені дані - це завжди рядок.
// let userName = prompt('Enter your name');
// console.log(userName); // виведе в консоль те, що введе юзер.


// ================================================

// *** 9. Числа. Приведення чисел до рядка.
// - метод parseInt() - приведе до цілого числа:
// const x = Number.parseInt('25.99');
// console.log(x); // виведе 25;


// * - метод parseFloat()
// const y = Number.parseFloat('25.99');
// console.log(y); // виведе 25.99;


// * - метод toFixed()
// const x = 10.345;
// x.toFixed(2) // вказується скільки цифр лишити після крапки.
// console.log(x.toFixed(2)); // виведе 10.34:


// ================================================

// *** 10. Приведення до числа:
// const str = '123234';
// const x = Number(str); // створюємо змінну х, щоб зберегти результат приведення;
// console.log(x); // виведе 123234;


// * - метод, який не треба застосовувати, але він існує для перетворення в число
// const str = '123';
// console.log(+str); // виведе число 123;


// =================================================

// *** 11. Метод Math // приводить до степеня, синус, косинус, корінь і т.д.
// - після написання Math ставимо крапку і вибираємо те, що треба зробити.
// const x = Math.pow(2,3);
// console.log(x); // виведе 8, це 2 в кубі.

// const y = Math.sqrt(64);
// console.log(y); // виведе 8, це корінь числа 64.

// * - короткий запис приведення до степеня:
// const x = 3 ** 2;
// console.log(x); || console.log(3**2); // виведе 9.


// ==================================================

// *** 12. Математичні операції: Математичні операторм завжди приводть до числа
// * наприклад false + true = 1

// + // додавання
// - // віднімання
// * // множення
// / // ділення
// ** // підведення до степеня
// % // остача від ділення

// const x = 2;
// const y = 3;
// const result = x % y;
// console.log(result); // результат буде 2 тому, що не лишається залишку від ділення

// let q = 10;
// q = q + 20; || q += 20; // це q збільшуємо на 20;
// console.log(q); // виведе 30;

// q++ || q += 1 || q = q + 1 // інкремент, щоб до q додати 1 (3 варінати)
// q-- || q -= 1 || q = q - 1 // декремент, щоб від q відняти 1 (3 варінати)

// let x = 10;
// console.log(++x); // префіксний інкремент, виведе в консоль відразу 11
// let y = 20;
// console.log(y++); // постфіксний інкремент, виведе в консоль 20, а при наступній дії - 21


// ** ===========  Задача  ==========
//  * Напиши скрипт який просить користувача ввести число та ступінь,
//  * зводить число в цей ступінь і виводить результат у консоль

// 1. const x = prompt('Enter x') // попросити юзера ввести число і зберігаємо його в змінну х
// 2. const y = prompt('Enter y') // попросити юзера ввести ступінь і зберігаємо його в змінну У
// 3. console.log(Number(x) ** Number(y) = звести введені дані до числа та привести їх у ступінь та вивести у консоль.


// ================================================

// *** 13. Рандомні числа
// const x = Math.random() // згенерували рандомне число від 0 до 1, записали у змінну х.
// console.log(x);
// console.log(Math.random()); // згенерували рандомне число, в круглих дужках
// ** якщо хочемо рандомне число від 0 до 100, то пишемо наступне:
// const y = Math.random() * 100;
// console.log(y);

// ** Округлюємо число:
// const q = Math.round(y) //  в дужки вносимо число або змінну, яке хочемо округлити. Ця функція не змінює наше число, а повертає нове округлене, відповідно краще його зберігати в змінну
// console.log(q); // виведе найближче ціле число від рандомного.

// ** якщо хочемо рандомне число від 10 до 1000
// const x = Math.random() * 990 + 10; (Math.random() * 990 - це діапазон від 0 до 990, а коли + 10, то це вже від 10 до 1000)

// ** якщо хочемо округлити до цілого в більшу сторону (10.00001 виведе 11)
// const c = Math.ceil(10.623) // виведе 11

// ** якщо хочемо округлити до цілого в меншу сторону
// const c = Math.floor(10.623) // виведе 10


// ==========================================================

// *** 14. Рядки
// const str = 'I\'m world'; // зворотній слеш дозволяє сприймати апостроф (він його ніби коментує)
// console.log(str); // виведе I'm world.

// const str1 = 'Hello\nWorld'
// console.log(str1); // виведе Hello World в стовпчик (\n перенесе World на новий рядок)

// * Довжина рядка // Властивість lenght
// let str1 = 'Hello';
// console.log(str1.length); // виведе 5, кількість символів в рядку

// str1 += ' world'; // виведе "Hello World"
// console.log(str1.length); // виведе 11

// * Конкатенація рядків
// const str1 = 'Hello';
// const str2 = 'World';

// const result = str1 + ' ' + str2;
// console.log(result); // виведе Hello World (' ' - це доадємо пробіл)

// ** =========== Задача =============
// Напиши скрипт який виведе рядок у форматі:
// «Hello UserName»,

// const firstName = prompt("Enter your firstName")
// const lastName = prompt('Enter your lastName')

// const message = 'Hello ' + firstName + ' ' + lastName;
// console.log(message);

// * Шаблонні рядки ${}
// `` - похилі рядки дозволяють використовувати інтерполяцію змінної. (тобто підставляти змінну в рядок, замість +)

// * const firstName = prompt("Enter your firstName")
// const lastName = prompt('Enter your lastName')
// const message = `Hello ${firstName} ${lastName}`;
// console.log(message);

// * const firstName = 'Vlad';
// const lastName = 'Olga';
// const age = 10;
// const city = 'Lutsk';

// const result = 'First name: ' + firstName + '\nLast name: ' + lastName + '\nAge: ' + age + '\nCity: ' + city;
// console.log(result); // звичайне написання

// const result1 = `First name: ${firstName} \nLast name: ${lastName} \nAge: ${age} \nCity: ${city}`;
// console.log(result1); // написано за допомогою шаблонних рядків

// * Властивість - це якась ознака обєкту, для них круглих дужок не треба
// * Метод - це якась дія обєкту, круглі дужки треба

// * метод toLowerCase() // приводить до нижнього регістру
// * (не змінює рядок, а повертає новий, тому його краже зберігати в змінну)
// let str = 'HELLO';
// const result = str.toLowerCase();
// console.log(result);

// * str = str.toLowerCase(); // це значить, що ми перезаписала значення в коробці str/
// console.log(str);

// * метод toUpperCase() // приводить до верхнього регістру
// * (не змінює рядок, а повертає новий, тому його краже зберігати в змінну)
// let str = 'Hello';
// const result = str.toUpperCase();
// console.log(result);

// * str = str.toUpperCase(); // це значить, що ми перезаписала значення в коробці str/
// console.log(str);

// * метод includes() // пошук в рядку
// const message = 'Hello world';
// const result = message.includes('Hel')
// console.log(result); // поверне true || false (чутливий до регістру)

// ** ================ Задача ===============

// const blacklistedWord1 = 'спам'; // записали в змінні те, що будемо шукати
// const blacklistedWord2 = 'розпродаж';

// const string1 = 'Привіт, я принц Абдул, це не спам, пропоную тобі мільйон!';
// const string2 = 'Найбільша РОЗПРОДАЖ цього тижня, не пропустіть!';
// const string3 = 'Рекламна кампанія #fatlivesmatter';

// console.log(string1.toLowerCase().includes(blacklistedWord1)); // спочатку привели до нижнього регістру, а потім шукаємо в рядку
// console.log(string1.includes(blacklistedWord2));

// ==================================
// * Щоб перевірити два значення 

// const str1 = 'Message with Spam';
// const str2 = 'spam';
// const str3 = 'ban_word';

// const result =
//   str1.toLowerCase().includes(str2) || str1.includes(str3);

// console.log(result);


// ========================================================
// *** 15. Логічні оператори порівняння
// const x = 10;
// const y = 20;

// const result = y > x;
// console.log(result); // виведе true і запише це в змінну result

// const result1 = y > x; // true || false
// const result2 = y < x;
// const result3 = y >= x;
// const result4 = y <= x;

// * Порівняння рядків
// const x = 'Hello';
// const y = 'World';
// const result = y > x;
// console.log(result); // виведе true, в кожної букви є числове значенні в таблиці юнікоду.

// * Приведення (перетворення) типів до числа
// const x = '20';
// const y = 10;
// console.log(x > y); // виведе true, бо js сам привів рядок '20' до числа, а поотім порівняв

// * Оператори порівняння, повертають завжи булеві значення

// const x = '20';
// const y = 20;
// const result1 = x == y;
// const result2 = x === y;
// console.log(result1); // буде true, бо нестрога рівність, хоча порівнює рядок з числом.
// console.log(result2); // буде false, бо строга рівність

// const x = 10;
// const y = 20;
// const result = x > y + x < y; // дивитись таблицю пріорітетів js, для послідовності виконання дій
// * спочатку виконається додавання у + х = 30, бо + має більший пріорітет
// * далі код виглядатиме так 10 > 30 < 20, знаки порівняння мають однаковий пріорітет і коди виконається зліва на право
// * 10 > 30 = false (спрацює приведення типів false = 0) > 20 = 0 > 20 = true 
// console.log(result); // виведе true

// * Логічні оператори
// 0 - false
// 1 - true
// "aefsa" - true (рядок)
// '' - false (порожній рядок)
// null - false
// undefined - false
// true - true
// false - false

// * && Логічне І
// Зупиняється на першій брехні і повертає її || або праву частину, якщо ліва не брехня

// "test" && "hello"; // повертає hello (повертає ліву частину, лише якщо там false)
// "" && "hello"; // повертає "" (бо "" - це false)
// false && true; // повертає false
// 5 && 10 // повертає 10

// * || Оператор Або
// Зупиняється на першій правді, (завжди повертає ліву частину, якщо там true)
// Повертає те на чому зупинився, або останній операнд, якщо обидва false

// 0
// && - *; // оператор && це як операція множення
// || - + // оператор || це як операція додавання
// true - 1 // true завжди 1
// false - 0 // false завжди 0

// console.log(false || true && false && true || true || false)
// 0 + (1 * 0 * 1) + 1 + 0 = 1 = true

// ** ============== Задача ===============
// const userAge = 15;
// const money = 10000;

// console.log(userAge >= 18 || money >= 1000); // поверне true, бо поверне правий операнд
// console.log(userAge >= 18 && money >= 1000); // поверне false, бо зупиниться на першій брехні

// * Логічне НЕ
// робить інверсію павда > брехня та брехня > правда

// 10 != 20; // поверне true