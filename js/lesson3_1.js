// *** 1. –ú–∞—Å–∏–≤–∏
// *** 2. join –º–µ—Ç–æ–¥
// *** 3. split –º–µ—Ç–æ–¥
// *** 4. slice –º–µ—Ç–æ–¥
// *** 5. concat –º–µ—Ç–æ–¥
// *** 6. indexOf / lastIndexOf –º–µ—Ç–æ–¥–∏
// *** 7. push / pop –º–µ—Ç–æ–¥–∏
// *** 8. shift / unshift –º–µ—Ç–æ–¥–∏
// *** 9. splice –º–µ—Ç–æ–¥
// *** 10. –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É (–ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è)





// ** –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É:
// const myBox = [10, 20, 30]; // –≤ –º–∞—Å–∏–≤—ñ 3 —á–∏—Å–ª–∞
// console.log(myBox);



// ** –ï–ª–µ–º–µ–Ω—Ç–∏ –≤ –º–∞—Å–∏–≤—ñ –º–∞—é—Ç—å —ñ–Ω–¥–µ–∫—Å–∏, –ø–æ—á–∞—Ç–æ–∫ –∑ 0
// ** –ó–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –µ–ª–µ–º–µ–Ω—Ç–∞:
// const myBox = [10, 20, 30];
// myBox[0];
// console.log(myBox[0]); // –≤–∏–≤–µ–¥–µ 10



// ** –ó–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –Ω–µ—ñ—Å–Ω—É—é—á–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤–∏–≤–µ–¥–µ undefined



// ** –ó–∞–º—ñ–Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ:
// const arr = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];
// arr[2] = 'test';
// console.log(arr);

// ** –Ø–∫—â–æ –∑–∞–º—ñ–Ω—é–≤–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å–∏–≤—ñ, —è–∫–æ–≥–æ —â–µ –Ω–µ–º–∞—î, —Ç–æ –π–æ–≥–æ —Å—Ç–≤–æ—Ä–∏—Ç—å
// * –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–æ–≤–∂–∏–Ω–∞ –º–∞—Å–∏–≤—É 5, –∞ –º–∏ –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ 10, —Ç–æ –¥–æ–≤–∂–∏–Ω–∞ –º–∞—Å–∏–≤—É —Å—Ç–∞–Ω–µ 11
// const arr = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];
// arr[10] = 'Good';
// console.log(arr);



// ** –î–æ–≤–∂–∏–Ω–∞ –º–∞—Å–∏–≤—É - .lenght
// const arr = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];
// arr[10] = 'Good';
// console.log(arr)
// const myLenght = arr.length;
// console.log(myLenght);



// ** –Ü–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
// const arr = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];
// const lastIndex = arr[arr.length - 1];
// console.log(lastIndex);



// *** 2. join –º–µ—Ç–æ–¥ - –æ–±'—î–¥–Ω—É—î –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ —Å—É—Ü—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫
// ** –≤ –¥—É–∂–∫–∞—Ö –≤–∫–∞–∑—É—î—Ç—å—Å—è —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫
// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];
// const result = courses.join('-')
// console.log(result);



// *** 3. split –º–µ—Ç–æ–¥
// * –î—ñ–ª–∏—Ç—å —Ä—è–¥–æ–∫ –Ω–∞ –º–∞—Å–∏–≤ (–ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ä—è–¥–æ–∫ –≤ –º–∞—Å–∏–≤)
// * –≤ –¥—É–∂–∫–∞—Ö –≤–∫–∞–∑–∞—Ç–∏, –ø–æ —á–æ–º—É —Ä—ñ–∑–∞—Ç–∏
// * –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// * —è–∫—â–æ –¥–æ–ø–∏—Å–∞—Ç–∏ length —Ç–æ –ø–æ–≤–µ—Ä–Ω–µ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤
// const str = 'Hello world, it`s test line with some words';
// const result = str.split(' ').length;
// console.log(result);



// *** 4. slice –º–µ—Ç–æ–¥
// * –≤–∏—Ä—ñ–∑–∞—î —á–∞—Å—Ç–∏–Ω—É –º–∞—Å–∏–≤—É
// * –≤ –¥—É–∂–∫–∞—Ö –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ç–∞ –∫—ñ–Ω—Ü–µ–≤–∏–π —ñ–Ω–¥–µ–∫—Å (–Ω–µ –≤–∫–ª—é—á–Ω–æ)
// * –∑–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –Ω–∞–≤—ñ—Ç—å –ø–æ—Ä–æ–∂–Ω—ñ–π
// * —è–∫—â–æ –ø–∏—à–µ–º–æ –≤—ñ–¥—î–º–Ω—ñ —ñ–Ω–¥–µ–∫—Å–∏, —Ü–µ —Ä–∞—Ö—É—î–º–æ –∑ –∫—ñ–Ω—Ü—è
// const arr = [3, 4, 5, 6, 8, 2, 8, 4, 9,];
// const result = arr.slice(5, 7);
// console.log(result);



// *** 5. concat –º–µ—Ç–æ–¥
// –æ–±'—î–¥–Ω—É—î –≤ –æ–¥–∏–Ω –º–∞—Å–∏–≤
// –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// const arr1 = [1, 3, 5, 6, 7];
// const arr2 = [1, 9, 7];
// const arr3 = [8, 9, 0, 5];
// const result = arr1.concat(arr2, arr3)
// console.log(result);

// –∑–∞–∑–≤–∏—á–∞–π –∫—Ä–∞—â–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≤—ñ–¥—Ä–∞–∑—É –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
// const arr1 = [1, 3, 5, 6, 7];
// const arr2 = [1, 9, 7];
// const arr3 = [8, 9, 0, 5];
// const result = [].concat(arr1, arr2, arr3)
// console.log(result);



// *** 6. indexOf / lastIndexOf –º–µ—Ç–æ–¥–∏
// * —à—É–∫–∞—î —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞ (—Å—Ç—Ä–æ–≥–∞ —Ä—ñ–≤–Ω—ñ—Å—Ç—å)
// * –≤–∏–≤–µ–¥–µ –ø–µ—Ä—à–∏–π, —è–∫–∏–π –∑–Ω–∞–π—à–æ–≤, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —î –¥–≤–∞ –æ–¥–Ω–∞–∫–æ–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç–∞
// * —è–∫—â–æ —à—É–∫–∞—Ç–∏ –Ω–µ—ñ—Å–Ω—É—é—á–∏–π –µ–ª–µ–º–µ–Ω—Ç, –≤–∏–¥–∞—Å—Ç—å -1
// *** lastIndexOf - —à—É–∫–∞—î –∑ –∫—ñ–Ω—Ü—è
// const arr = [1, 3, 6, 8, 78, 99,];
// const result = arr.indexOf(99);
// console.log(result);



// *** 7. push / pop –º–µ—Ç–æ–¥–∏
// * push - –∫–ª–∞–¥–µ –≤ –∫—ñ–Ω–µ—Ü—å –µ–ª–µ–º–µ–Ω—Ç
// * –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤—É –¥–æ–≤–∂–∏–Ω—É –º–∞—Å–∏–≤—É
// * –≤ –¥—É–∂–∫–∞—Ö –≤–∫–∞–∑—É—î—Ç—å—Å—è, —â–æ –ø–æ–∫–ª–∞—Å—Ç–∏, –º–æ–∂–Ω–∞ –ø–∏—Å–∞—Ç–∏ —á–µ—Ä–µ–∑ –∫–æ–º—É
// const arr = [];
// arr.push(10, 21, 39);
// arr.push(20);
// arr.push(30);
// console.log(arr);

// * pop - –¥—ñ—Å—Ç–∞—î –∑ –∫—ñ–Ω—Ü—è –µ–ª–µ–º–µ–Ω—Ç
// * –≤ –¥—É–∂–∫–∞—Ö –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∫–∞–∑—É–≤–∞—Ç–∏
// * –ø–æ–≤–µ—Ä—Ç–∞—î –≤–∏–¥–∞–ª–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
// * –¥—ñ—Å—Ç–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ –∑–∞ —Ä–∞–∑ –Ω–µ –º–æ–∂–Ω–∞
// const arr1 = [4,6,8,0,9,3,99];
// const elem = arr1.pop();
// console.log(elem); // –≤–∏–≤–µ–¥–µ 99
// console.log(arr1.pop()); // –≤–∏–≤–µ–¥–µ 3
// console.log(arr1.pop()); // –≤–∏–≤–µ–¥–µ 9
// console.log(arr1.pop()); // –≤–∏–≤–µ–¥–µ 0



// *** 8. shift / unshift –º–µ—Ç–æ–¥–∏
// unshift - –¥–æ–¥–∞—î –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –µ–ª–µ–º–µ–Ω—Ç
// const arr = ['test', 'test2', 'test2']
// const result = arr.unshift('Good');
// console.log(arr);
// console.log(result); // –ø–æ–≤–µ—Ä–Ω–µ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤

// * shift - –≤–∏–¥–∞–ª—è—î –∑ –ø–æ—á–∞—Ç–∫—É –µ–ª–µ–º–µ–Ω—Ç
// * –ø–æ–≤–µ—Ä—Ç–∞—î —Ü–µ–π –µ–ª–µ–º–µ–Ω—Ç
// const arr = ['test', 'test2', 'test2']
// const result = arr.shift();
// console.log(arr);
// console.log(result);



// *** 9. splice –º–µ—Ç–æ–¥
// * –¥–æ–∑–≤–æ–ª—è—î –∑–∞–º—ñ–Ω–∏—Ç–∏, –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞ –¥–æ–¥–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—É –º–∞—Å–∏–≤—É
// * –ø–æ–≤–µ—Ä—Ç–∞—î –≤–∏–¥–∞–ª–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
// * –∑–º—ñ–Ω—é—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤
// * –≤ –¥—É–∂–∫–∞—Ö - –≤–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–µ–∫—Å –∑ —è–∫–æ–≥–æ –ø–æ—á–∞—Ç–∏ —ñ –∫-—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// * –º—ñ–Ω—É—Å–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –≤—ñ–¥—Ä–∞—Ö—É—î –∑ –∫—ñ–Ω—Ü—è
// * —Å–ª–æ–≤–æ–∞ start —ñ good –≤—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –º—ñ—Å—Ü–µ –≤–∏–¥–∞–ª–µ–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// const arr = [2, 5, 7, 8, 9,];
// const result = arr.splice(0, 3, 'start', 'Good');
// console.log(arr);
// console.log(result);



// *** 10. –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É (–ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è)
// * –≤–∏–∫–ª–æ–º for
// const arr = [1, 4, 67, 7, 5, 4, 3, 2];
// for (let i = 0; i <= 7; i++) {
//     console.log(arr[i]);
// }

// * –≤–∏–∫–ª–æ–º for of
// const arr = [1, 4, 67, 7, 5, 4, 3, 2];
// for (let elem of arr) {
//     console.log(elem);
// }




// =========== –ó–∞–¥–∞—á–∞ ============

//  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
//  * –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
//  * –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
// const values = '8 11';
// const result = values.split(' ');
// const a = Number(result[0]);
// const b = Number(result[1]);
// console.log(a * b);



//  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
//  * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
//  * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
//  * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
// for (let i = 1; i < fruits.length; i++) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }
